<?php
/**
 * @file
 */

function freegeek_townsquare_rules_rules_event_info() {
  $items = array(
    // An event invoked for every volunteer record processed
    'freegeek_townsquare_rules_process_sessions' => array(
        'label' => t('After processing a volunteer\'s recent participation'),
        'variables' => array(
          'account' => array(
            'type' => 'user',
            'label' => t('User'),
          ),
          'hours_old' => array(
            'type' => 'decimal',
            'label' => t('Old hours'),
          ),
          'hours_new' => array(
            'type' => 'decimal',
            'label' => t('New hours'),
          ),
          'hours_difference' => array(
            'type' => 'decimal',
            'label' => t('Difference'),
          ),
       ),
       'group' => t('Townsquare'),
     ),
  );
  return $items;
}

function freegeek_townsquare_rules_init() {
  // Based on last cron run timestamp
  // Get all sessions updated since last cron
  // Get all users where processed date not since last cron 
  // Sum hours for users in sessions
  //
  $start = time();
  $end = variable_get('cron_last');
  $end = 0;
  $query = new EntityFieldQuery;
  $query
    ->entityCondition('entity_type', 'node')
    ->propertyCondition('type', 'volunteer_session')
    ->propertyCondition('changed', $start, '<')
    ->propertyCondition('changed', $end, '>');


  $result = $query->execute();
  if ($result) {
    $sessions = entity_load('node', array_keys($result['node']));

    // Calculate each user's new and old hours
    $durations = array();
    foreach ($sessions as $nid => $session) {
      if ($session->uid) {
        if (!isset($durations[$session->uid])) {
          $durations[$session->uid] = array(
            'old' => 0,
            'new' => 0,
          );
        }
        $durations[$session->uid]['new'] += $session->field_session_duration['und'][0]['value'];

        $old_query = new EntityfieldQuery;
        $old_query
          ->entityCondition('entity_type', 'node')
          ->propertyCondition('type', 'volunteer_session')
          ->propertyCondition('uid', $session->uid, '=')
          ->propertyCondition('changed', $end, '<');
        $old_result = $old_query->execute();
        if ($old_result) {
          $old_sessions = entity_load('node', array_keys($old_result['node']));
          foreach ($old_sessions as $old_session) {
            $durations[$session->uid]['old'] += $old_session->field_session_duration['und'][0]['value'];
            $durations[$session->uid]['new'] += $old_session->field_session_duration['und'][0]['value'];
          }
        }
      }
    }

    foreach ($durations as $uid => $hours) {
      $user = user_load($uid);
      dpm($user);
      $difference = $hours['new'] - $hours['old'];
      rules_invoke_event('freegeek_townsquare_rules_process_sessions', $user, $hours['new'], $hours['old'], $difference);
    }
  } 
}

